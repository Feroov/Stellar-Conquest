plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'org.spongepowered.mixin' version '0.7.+'
}

version = '1.20.1-3.0'
group = 'com.feroov.frv'
archivesBaseName = 'stellar-conquest'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {

    mappings channel: 'official', version: '1.20.1'
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'frv'

            mods {
                frv {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'frv'

            mods {
                frv {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'frv'

            mods {
                frv {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'


            args '--mod', 'frv', '--all', '--output',
                    file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                frv {
                    source sourceSets.main
                }
            }
        }
    }
}


sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
    maven {
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        name = "Jared's maven"
        url = "https://maven.blamejared.com/"
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.20.1-47.1.0'
    implementation fg.deobf('software.bernie.geckolib:geckolib-forge-1.20:4.2')
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
    compileOnly fg.deobf("mezz.jei:jei-${mc_version}-common-api:${jei_version}")
    compileOnly fg.deobf("mezz.jei:jei-${mc_version}-forge-api:${jei_version}")
    runtimeOnly(fg.deobf("mezz.jei:jei-${mc_version}-forge:${jei_version}"))
    compileOnly group: 'org.lwjgl', name: 'lwjgl-glfw', version: '3.3.0'
}

mixin {
    add sourceSets.main, "stlcon.refmap.json"
    config 'stlcon.mixins.json'
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "frv",
                "Specification-Vendor"    : "frvsareus",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "frvsareus",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}